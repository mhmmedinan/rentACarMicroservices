version: '3.8'

volumes:
  postgreskeycloak_data:
      driver: local
  postgres-inventory-data:
    name: postgres-inventory-data
  postgres-invoice-data:
    name: postgres-invoice-data
  postgres-payment-data:
    name: postgres-payment-data
  postgres-rental-data:
    name: postgres-rental-data

services:

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    ports:
     - "2181:2181"
    environment:
     - ALLOW_ANONYMOUS_LOGIN=yes
     
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
     - "9092:9092"
    depends_on:
     - zookeeper
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=LISTENER_MINAN://localhost:9092,LISTENER_MRM://kafka:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_MINAN:PLAINTEXT,LISTENER_MRM:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=LISTENER_MINAN://localhost:9092,LISTENER_MRM://kafka:29092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=LISTENER_MRM
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes


  configserver:
    build: ./configServer
    container_name: configserver
    image: config-server-image
    ports:
     - "8888:8888"
    volumes:
     - ./configServer:/app
    environment:
     - SPRING_CLOUD_CONFIG_SERVER_GIT_URI=https://github.com/mhmmedinan/configServer
  
  discoveryserver:
    build: ./discoveryServer
    container_name: discoveryserver
    image: discovery-server-image
    ports:
     - "9001:9001"
    volumes:
     - ./discoveryServer:/app
    depends_on:
      - configserver

  apigateway:
    build: ./apigateway
    container_name: apigateway
    image: muhammedinan/api-gateway-image
    ports:
     - "9011:9011"
    volumes:
     - ./apigateway:/app
    depends_on:
     - discoveryserver
     - configserver
     - keycloak
    environment:
     - SPRING_PROFILES_ACTIVE=docker

  
  inventorydb: 
    container_name: inventorydb
    image: postgres
    ports:
     - "5437:5432"
    environment:
     - POSTGRES_USER=admin
     - POSTGRES_PASSWORD=12345

    volumes:
     - "postgres-inventory-data:/var/lib/postgresql/data"


  inventory-service:
   build: ./inventoryService
   container_name: inventory-service
   image: inventory-service
   volumes:
    - ./inventoryService:/app
   depends_on:
    - inventorydb
    - discoveryserver
    - kafka
    - configserver
   environment:
    - SPRING_PROFILES_ACTIVE=docker

  filterdb:
    container_name: filterdb
    image: mongo
    ports:
     - "27017:27017"
    volumes:
     - "/data/db/" 

  filter-service:
   build: ./filterService
   container_name: filter-service
   image: filter-service-api
   volumes:
     - ./filterService:/app
   depends_on:
     - configserver
     - discoveryserver
     - kafka
     - filterdb
   environment:
     - SPRING_PROFILES_ACTIVE=docker
  
  rentaldb: 
   container_name: rentaldb
   image: postgres
   ports:
     - "5436:5432"
   environment:
     - POSTGRES_USER=admin
     - POSTGRES_PASSWORD=12345

   volumes:
     - "postgres-rental-data:/var/lib/postgresql/data"

  rental-service:
   build: ./rentalService
   container_name: rental-service
   image: rental-service
   volumes:
     - ./rentalService:/app
   depends_on:
     - rentaldb
     - discoveryserver
     - kafka
     - configserver
   environment:
     - SPRING_PROFILES_ACTIVE=docker

  paymentdb: 
    container_name: paymentdb
    image: postgres
    ports:
     - "5438:5432"
    environment:
     - POSTGRES_USER=admin
     - POSTGRES_PASSWORD=12345

    volumes:
     - "postgres-payment-data:/var/lib/postgresql/data"

  payment-service:
   build: ./paymentService
   container_name: payment-service
   image: payment-services
   volumes:
     - ./paymentService:/app
   depends_on:
     - paymentdb
     - discoveryserver
     - kafka
     - configserver
   environment:
     - SPRING_PROFILES_ACTIVE=docker

  invoicedb: 
    container_name: invoicedb
    image: postgres
    ports:
     - "5439:5432"
    environment:
     - POSTGRES_USER=admin
     - POSTGRES_PASSWORD=12345

    volumes:
     - "postgres-invoice-data:/var/lib/postgresql/data"

  invoice-service:
   build: ./invoiceService
   container_name: invoice-service
   image: invoice-service
   volumes:
     - ./invoiceService:/app
   depends_on:
     - invoicedb
     - discoveryserver
     - kafka
     - configserver
   environment:
     - SPRING_PROFILES_ACTIVE=docker

  keycloak_postgres: 
    container_name: keycloak_postgres
    image: postgres
    ports:
     - "5435:5432"
    environment:
      POSTGRES_DB: keycloakpostgres
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: 12345
    volumes:
     - "postgreskeycloak_data:/var/lib/postgresql/data"

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:legacy
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: keycloak_postgres
      DB_DATABASE: keycloakpostgres
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: 12345
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
    ports:
      - "8080:8080"
    depends_on:
      - keycloak_postgres
  
