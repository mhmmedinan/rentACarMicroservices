version: '3.8'

services:

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    restart: always
    ports:
     - "2181:2181"
    environment:
     - ALLOW_ANONYMOUS_LOGIN=yes
     
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
     - "9092:9092"
    restart: always
    depends_on:
     - zookeeper
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=LISTENER_BERNA://localhost:9092,LISTENER_MRM://kafka:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_BERNA:PLAINTEXT,LISTENER_MRM:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=LISTENER_BERNA://localhost:9092,LISTENER_MRM://kafka:29092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=LISTENER_MRM
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes


  configserver:
    build: ./configServer
    container_name: configserver
    image: config-server-image
    restart: always
    ports:
     - "8889:8888"
    volumes:
     - ./configServer:/app
    environment:
     - SPRING_CLOUD_CONFIG_SERVER_GIT_URI=https://github.com/mhmmedinan/configServer
  
  discoveryserver:
    build: ./discoveryServer
    container_name: discoveryserver
    image: discovery-server-image
    restart: always
    ports:
     - "9001:9001"
    volumes:
     - ./discoveryServer:/app
    depends_on:
      - configserver

  apigateway:
    build: ./apigateway
    container_name: apigateway
    image: muhammedinan/api-gateway-image
    restart: always
    ports:
     - "9011:9011"
    volumes:
     - ./apigateway:/app
    depends_on:
     - discoveryserver
     - configserver
    environment:
     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discoveryserver:9001/eureka/

  
  inventorydb: 
    container_name: inventorydb
    image: postgres
    restart: always
    ports:
     - "5434:5432"
    environment:
     - POSTGRES_USER=admin
     - POSTGRES_PASSWORD=12345

    volumes:
     - "./pg_data:/var/lib/postgresql/data"


  inventoryservice.api:
   build: ./inventoryService
   container_name: inventoryservice.api
   image: muhammedinan/invertory-service-api
   restart: always
   volumes:
    - ./inventoryService:/app
   depends_on:
    - inventorydb
    - discoveryserver
    - kafka
    - configserver
   environment:
    - SPRING_CLOUD_CONFIG_IMPORT=configserver:http://configserver:8888
    - SPRING_DATASOURCE_URL=jdbc:postgresql://inventorydb:5432/rentacarinvertorydb
    - SPRING_DATASOURCE_USERNAME=admin
    - SPRING_DATASOURCE_PASSWORD=12345
    - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discoveryserver:9001/eureka/
    - SPRING_PROFILES_ACTIVE=docker

  filterdb:
    container_name: filterdb
    image: mongo
    restart: always
    ports:
     - "27017:27017"
    volumes:
     - "/data/db/" 

  filterservice.api:
   build: ./filterService
   container_name: filterservice.api
   image: filter-service-api
   restart: always
   volumes:
     - ./filterService:/app
   depends_on:
     - configserver
     - discoveryserver
     - kafka
     - filterdb
   environment:
     - SPRING_CLOUD_CONFIG_IMPORT=configserver:http://configserver:8888
     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discoveryserver:9001/eureka/
     - SPRING_PROFILES_ACTIVE=docker